FROM node:18-alpine as builder

WORKDIR /app

COPY package.json package-lock.json ./
COPY .eslintrc ./
# COPY packages/domain/ ./packages/domain/
# COPY packages/infrastructure/ ./packages/infrastructure/
COPY packages/applications/backend ./packages/applications/backend


RUN npm ci -w backend

ENV NODE_ENV production
RUN npm run build -w backend

# TODO only install dev deps

FROM node:18

WORKDIR /app

COPY --from=builder /app/node_modules ./
COPY --from=builder /app/packages/applications/backend/build ./build
COPY --from=builder /app/packages/applications/backend/package.json ./package.json

CMD ["npm", "run", "start"]

# # RUN container
# FROM nginx:stable-alpine
# COPY --from=builder /app/packages/applications/frontend/dist /usr/share/nginx/html
# COPY --from=builder /app/packages/applications/frontend/nginx/nginx.conf /etc/nginx/conf.d/default.conf
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]






# # Build stage
# FROM node:16-alpine as build
# WORKDIR /app
# COPY . .
# RUN npm install
# RUN npm run build

# # RUN container
# FROM nginx:stable-alpine
# COPY --from=build /app/build /usr/share/nginx/html
# COPY --from=build /app/nginx/nginx.conf /etc/nginx/conf.d/default.conf
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]